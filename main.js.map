{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-39\",\r\n  headers: {\r\n    authorization: \"4d843643-f9b3-4126-9ca7-8baba1b4cfdc\",\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n};\r\n\r\n// Создаем общую функцию для ошибки\r\nfunction checkResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\n// Загрузка с сервера карточек\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Загрузка с сервера информации о пользователе\r\nexport const getUserInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Обновление профиля методом PATCH\r\nexport const updateProfileUser = (card) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name:card.name,\r\n      about:card.about\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Добавление новой карточки на сервер\r\nexport const addNewCardServer = (nameCard, linkCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameCard,\r\n      link: linkCard,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Удаление карточки с сервера\r\nexport const deleteCardServer = (userId) => {\r\n  return fetch(`${config.baseUrl}/cards/${userId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Постановка лайка\r\nexport const addLikeCardServer = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Снятие лайка\r\nexport const deleteLikeCardServer = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\n// Обновление аватара\r\nexport const updateAvatar = (avatarUrl) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatarUrl,\r\n    }),\r\n  }).then(checkResponse);\r\n};","\r\nimport { addLikeCardServer, deleteLikeCardServer, deleteCardServer } from './api.js';\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\nfunction createCard(item, userId, likeCard, showImage) {\r\n  const placesItem = cardTemplate.querySelector('.card').cloneNode(true)\r\n  const cardImage = placesItem.querySelector('.card__image')\r\n  const cardTitle = placesItem.querySelector('.card__title')\r\n  const cardDeleteButton = placesItem.querySelector('.card__delete-button')\r\n  const cardLikeButton = placesItem.querySelector('.card__like-button')\r\n  const likeCountElement = placesItem.querySelector('.card__like-count')\r\n  \r\n  placesItem.id = item['_id'];\r\n\r\n  cardImage.alt = item.name\r\n  cardImage.src = item.link\r\n  cardTitle.textContent = item.name\r\n  likeCountElement.textContent = item.likes.length;\r\n\r\n\r\n  const isLiked = item.likes.some((like) => like._id === userId);\r\n  if (isLiked) {\r\n    cardLikeButton.classList.add('card__like-button_is-active');\r\n  }\r\n\r\n\r\n  cardImage.addEventListener('click', () => {\r\n    showImage(item.link, item.name);\r\n  })\r\n\r\n  cardLikeButton.addEventListener('click', (evt) => {\r\n    likeCard(evt, item._id);\r\n  })\r\n\r\n  if(item.owner._id === userId) {\r\n   cardDeleteButton.addEventListener('click', (evt) => {\r\n    deleteCard(evt, item._id);\r\n  });\r\n  } else {\r\n    cardDeleteButton.remove();\r\n  }\r\n\r\n  return placesItem;\r\n}\r\n\r\n\r\n//Функция удалния карточки\r\nfunction deleteCard(evt, userId) {\r\n  deleteCardServer(userId)\r\n    .then(() => {\r\n      const card = evt.target.closest('.card');\r\n      card.remove();\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\n\r\n//Функция лайка\r\n\r\nconst likeCard = (evt, cardId) => {\r\n  const isLikes = evt.target.parentNode.querySelector('.card__like-count');\r\n  if (evt.target.classList.contains('card__like-button_is-active')) {\r\n    deleteLikeCardServer(cardId)\r\n      .then((data) => {\r\n        evt.target.classList.remove('card__like-button_is-active');\r\n        isLikes.textContent = data.likes.length;\r\n      })\r\n      .catch((err) => {\r\n        console.log('Ошибка', err);\r\n      });\r\n  } else {\r\n    addLikeCardServer(cardId)\r\n      .then((data) => {\r\n        evt.target.classList.add('card__like-button_is-active');\r\n        isLikes.textContent = data.likes.length;\r\n      })\r\n      .catch((err) => {\r\n        console.log('Ошибка', err);\r\n      });\r\n  }\r\n};\r\n\r\n\r\nexport {createCard, deleteCard, likeCard}","\r\n//Открываем модалку\r\nfunction openModal(modal) {\r\n  modal.classList.add('popup_is-opened')\r\n  document.addEventListener('keyup', closeEsc)\r\n} \r\n\r\n//Закрываем модалку\r\nfunction closeModal(modal) {\r\n  modal.classList.remove('popup_is-opened')\r\n  document.removeEventListener('keyup', closeEsc)\r\n}\r\n\r\n\r\n//Закрываем по нажатию клавиши Esc\r\nfunction closeEsc(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const openedPopup = document.querySelector('.popup_is-opened')\r\n    closeModal(openedPopup)\r\n  }\r\n} \r\n\r\nexport {openModal, closeModal}","const showErrorInputPopup = (\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  const elementError = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(inputErrorClass);\r\n  elementError.textContent = errorMessage;\r\n  elementError.classList.add(errorClass);\r\n};\r\n\r\nconst hideErrorInputPopup = (\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  const elementError = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(inputErrorClass);\r\n  elementError.classList.remove(errorClass);\r\n  elementError.textContent = \"\";\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\nconst toggleButtonPopupState = (inputList, buttonElement, inactiveButtonClass) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(inactiveButtonClass);\r\n  }\r\n};\r\n\r\nconst checkInputValidity = (\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showErrorInputPopup(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      inputErrorClass,\r\n      errorClass\r\n    );\r\n  } else {\r\n    hideErrorInputPopup(formElement, inputElement, inputErrorClass, errorClass);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (\r\n  formElement,\r\n  inputSelector,\r\n  inputErrorClass,\r\n  errorClass,\r\n  submitButtonSelector,\r\n  inactiveButtonClass\r\n) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  const buttonElement = formElement.querySelector(submitButtonSelector);\r\n  toggleButtonPopupState(inputList, buttonElement);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", function () {\r\n      checkInputValidity(\r\n        formElement,\r\n        inputElement,\r\n        inputErrorClass,\r\n        errorClass\r\n      );\r\n      toggleButtonPopupState(inputList, buttonElement, inactiveButtonClass);\r\n    });\r\n  });\r\n};\r\n\r\nconst enableValidation = (validationConfig) => {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationConfig.formSelector)\r\n  );\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(\r\n      formElement,\r\n      validationConfig.inputSelector,\r\n      validationConfig.inputErrorClass,\r\n      validationConfig.errorClass,\r\n      validationConfig.submitButtonSelector,\r\n      validationConfig.inactiveButtonClass\r\n    );\r\n  });\r\n};\r\n\r\nfunction clearValidation(formElement, validationConfig) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideErrorInputPopup(formElement, inputElement);\r\n  });\r\n  toggleButtonPopupState(inputList, buttonElement);\r\n}\r\n\r\nexport { enableValidation, clearValidation };\r\n","\r\nimport './pages/index.css';\r\nimport { createCard, deleteCard, likeCard } from './scripts/card.js';\r\nimport { openModal, closeModal} from './scripts/modal.js';\r\nimport {enableValidation, clearValidation} from './scripts/validation.js';\r\nimport {getUserInfo, getInitialCards, updateProfileUser, addNewCardServer, updateAvatar, deleteCardServer} from './scripts/api.js';\r\n\r\n\r\n//Получаем элементы из DOM\r\n\r\nconst placesList = document.querySelector('.places__list');\r\nconst popups = document.querySelectorAll('.popup');\r\n\r\nconst avatarPopup = document.querySelector('.popup_type_avatar');\r\nconst avatarForm = document.forms['update-avatar'];\r\nconst avatarInput = avatarForm.querySelector('.popup__input_type_avatar-url');\r\nconst avatarImage = document.querySelector('.profile__image');\r\n\r\n\r\n//Модалки\r\nconst modals = {\r\n  popupTypeEdit: document.querySelector('.popup_type_edit'),\r\n  addNewCard: document.querySelector('.popup_type_new-card'),\r\n  showImage: document.querySelector('.popup_type_image')\r\n};\r\n\r\n//Элементы модалок\r\nconst modalEdit = {\r\n  openButton: document.querySelector('.profile__edit-button'),\r\n  closeButton: modals.popupTypeEdit.querySelector('.popup__close')\r\n};\r\n\r\n\r\nconst modalAddCard = {\r\n  openButton: document.querySelector('.profile__add-button'),\r\n  closeButton: modals.addNewCard.querySelector('.popup__close')\r\n};\r\n\r\nconst modalShowImage = {\r\n  image: document.querySelector('.popup__image'),\r\n  text: document.querySelector('.popup__caption'),\r\n  closeButton: modals.showImage.querySelector('.popup__close')\r\n};\r\n\r\n//Формы\r\nconst forms = {\r\n  addNewCard: document.forms['new-place'],\r\n  popupTypeEdit: document.forms['edit-profile']\r\n};\r\n\r\n//Элементы форм\r\nconst addCardForm = {\r\n  form: document.forms['new-place'],\r\n  url: document.querySelector('.popup__input_type_url'),\r\n  name: document.querySelector('.popup__input_type_card-name')\r\n};\r\n\r\nconst profile = {\r\n  name: document.querySelector('.profile__title'),\r\n  description: document.querySelector('.profile__description')\r\n};\r\n\r\nconst editForm = {\r\n  form: document.forms['edit-profile'],\r\n  nameInput: document.querySelector('.popup__input_type_name'),\r\n  jobInput: document.querySelector('.popup__input_type_description')\r\n};\r\n\r\n\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n\r\nlet userId;\r\n\r\n\r\n//Закрываем окна\r\npopups.forEach((popup) => {\r\n  const closeButton = popup.querySelector('.popup__close')\r\n\r\n  //Закрываем по клику на кнопку\r\n  closeButton.addEventListener('click', () => closeModal(popup))\r\n\r\n  //Закрываем модалку по клику вне\r\n  popup.addEventListener('mousedown', (evt) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      closeModal(popup)\r\n    }  \r\n  })\r\n\r\n  //Анимация окон\r\n  popup.classList.add('popup_is-animated')\r\n})\r\n\r\n//Функция просмотра изображения\r\nfunction showImage(link, name) {\r\n  modalShowImage.image.src = link\r\n  modalShowImage.image.alt = name\r\n  modalShowImage.text.textContent = name\r\n  openModal(modals.showImage)\r\n}\r\n\r\n//Карточка\r\n\r\n//Добавление карточки\r\naddCardForm.form.addEventListener('submit', addNewCard);\r\n\r\n//Открываем по клику на кнопку \r\nmodalAddCard.openButton.addEventListener('click', () => {\r\n  clearValidation(forms.addNewCard, validationConfig);\r\n  addCardForm.form.reset();\r\n  openModal(modals.addNewCard);\r\n});\r\n\r\nconst addLoading = (isLoading, button) => {\r\n  button.textContent = isLoading ? 'Сохранение...' : 'Сохранить';\r\n};\r\n\r\n//Создаем новую карточку\r\nfunction addNewCard(evt) {\r\n  //Отменяем отправку формы\r\n  evt.preventDefault();\r\n  addLoading(true, modals.addNewCard.querySelector('.popup__button'));\r\n\r\n  const newCardData = {\r\n    name: addCardForm.name.value,\r\n    link: addCardForm.url.value\r\n  }\r\n\r\n  addNewCardServer(newCardData.name, newCardData.link)\r\n    .then((data) => {\r\n    const newCard = createCard(\r\n        data,\r\n        userId,\r\n        likeCard,\r\n        showImage,\r\n        deleteCard\r\n      );\r\n      placesList.prepend(newCard);\r\n      closeModal(modals.addNewCard);\r\n      addCardForm.form.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.log('Ошибка', err);\r\n    })\r\n    .finally(() => {\r\n      addLoading(false, addCardForm.form.querySelector('.popup__button'));\r\n    });\r\n}\r\n\r\n//Профиль\r\n//Отправляем формы\r\nforms.popupTypeEdit.addEventListener('submit', submitEditForm)\r\n\r\n//Открываем по клику на кнопку \r\nmodalEdit.openButton.addEventListener('click', () => {\r\n  openModal(modals.popupTypeEdit);\r\n  clearValidation(forms.popupTypeEdit, validationConfig);\r\n \r\n  fillForm();\r\n})\r\n\r\n//Присваиваем поля форме профеля\r\nfunction fillForm() {\r\n  editForm.nameInput.value = profile.name.textContent;\r\n  editForm.jobInput.value = profile.description.textContent;\r\n}\r\n\r\n  // Обработчик 'отправки' формы \r\n\r\nfunction submitEditForm(evt) {\r\n  evt.preventDefault();\r\n  addLoading(true, editForm.form.querySelector('.popup__button'));\r\n  updateProfileUser({\r\n    name: editForm.form.name.value,\r\n    about: editForm.form.description.value,\r\n  })\r\n    .then((res) => {\r\n      //Обновляем поля и закрываем форму\r\n      profile.name.textContent = editForm.nameInput.value\r\n      profile.description.textContent = editForm.jobInput.value\r\n      closeModal(modals.popupTypeEdit);\r\n    })\r\n    .catch((err) => {\r\n      console.log('Ошибка при загрузке данных:', err);\r\n    })\r\n    .finally(() => {\r\n      addLoading(false, editForm.form.querySelector('.popup__button'));\r\n    })\r\n};\r\n\r\nPromise.all([getUserInfo(), getInitialCards()])\r\n  .then(([userData, cards]) => {\r\n    userId = userData._id;\r\n\r\n    // Обновляем профиль данными с сервера\r\n    profile.name.textContent = userData.name;\r\n    profile.description.textContent = userData.about;\r\n    avatarImage.style.backgroundImage = `url(${userData.avatar})`;\r\n    \r\n    // Отображаем карточки с сервера\r\n    cards.forEach((card) => {\r\n      const cardElement = createCard(\r\n        card,\r\n        userId,\r\n        likeCard,\r\n        showImage\r\n      );\r\n      placesList.append(cardElement);\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log('Ошибка при загрузке данных:', err);\r\n  });\r\n\r\n\r\n  //Аватар\r\n\r\n// Добавить обработчик открытия попапа аватара\r\navatarImage.addEventListener(\"click\", () => {\r\n  avatarForm.reset();\r\n  clearValidation(avatarForm, validationConfig);\r\n  openModal(avatarPopup);\r\n});\r\n\r\n// Добавить обработчик отправки формы аватара\r\navatarForm.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  const submitButton = evt.submitter;\r\n  const originalText = submitButton.textContent;\r\n  submitButton.textContent = \"Сохранение...\";\r\n\r\n  updateAvatar(avatarInput.value)\r\n    .then((userData) => {\r\n      avatarImage.style.backgroundImage = `url(${userData.avatar})`;\r\n      closeModal(avatarPopup);\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => {\r\n      submitButton.textContent = originalText;\r\n    });\r\n});\r\n\r\nenableValidation(validationConfig);"],"names":["config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","item","userId","likeCard","showImage","placesItem","cloneNode","cardImage","cardTitle","cardDeleteButton","cardLikeButton","likeCountElement","id","alt","name","src","link","textContent","likes","length","some","like","_id","classList","add","addEventListener","evt","owner","fetch","method","then","deleteCardServer","target","closest","remove","catch","err","console","log","deleteCard","cardId","isLikes","parentNode","contains","deleteLikeCardServer","data","addLikeCardServer","openModal","modal","closeEsc","closeModal","removeEventListener","key","hideErrorInputPopup","formElement","inputElement","inputErrorClass","errorClass","elementError","toggleButtonPopupState","inputList","buttonElement","inactiveButtonClass","validity","valid","hasInvalidInput","disabled","clearValidation","validationConfig","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","placesList","popups","avatarPopup","avatarForm","forms","avatarInput","avatarImage","modals","popupTypeEdit","addNewCard","modalEdit","openButton","closeButton","modalAddCard","modalShowImage","image","text","addCardForm","form","url","profile","description","editForm","nameInput","jobInput","formSelector","popup","currentTarget","preventDefault","addLoading","nameCard","linkCard","newCardData","value","body","JSON","stringify","newCard","prepend","reset","finally","isLoading","button","card","about","all","_ref","_ref2","userData","cards","style","backgroundImage","avatar","cardElement","append","avatarUrl","submitButton","submitter","originalText","patternMismatch","setCustomValidity","dataset","errorMessage","showErrorInputPopup","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}